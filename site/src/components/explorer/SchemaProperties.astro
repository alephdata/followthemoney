---
import PropertyType from './PropertyType.astro';
import IndexTable from './IndexTable.astro';

const { schema } = Astro.props;
const properties = Array.from(schema.getProperties().values()).sort((a, b) =>
  a.name.localeCompare(b.name)
);
---

<style>
  [data-show-inherited='false'] [data-is-inherited] {
    display: none;
  }
</style>

<script>
  window.addEventListener('DOMContentLoaded', () => {
    const container = document.querySelector('#props');
    const toggle = document.querySelector('#props-inherited-toggle');

    toggle.checked = false;

    toggle.addEventListener('change', () => {
      container.dataset.showInherited = toggle.checked ? 'true' : 'false';
    });
  });
</script>

<div id="props" data-show-inherited="false">
  <div class="flex justify-between items-end">
    <h2 class="mb-0">Properties</h2>

    <label class="mt-12 self-stretch">
      <input type="checkbox" id="props-inherited-toggle" />
      Show inherited
    </label>
  </div>

  <IndexTable>
    <tr slot="head">
      <th>Name</th>
      <th>Label</th>
      <th>Type</th>
    </tr>

    {
      properties.map((prop) => (
        <tr
          class:list={prop.schema.name !== schema.name && 'bg-slate-50 dark:bg-black/20'}
          data-is-inherited={prop.schema.name !== schema.name}
        >
          <td>
            <code>
              {prop.name}
            </code>
          </td>

          <td>{prop.label}</td>

          <td>
            <PropertyType property={prop} />
          </td>
        </tr>
      ))
    }
  </IndexTable>
</div>
